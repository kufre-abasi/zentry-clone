{
  "resolvedId": "/Users/kufre-abasibassey/Documents/Projects/WEB2/zentry clone/untitled folder/zentry/node_modules/gsap/Physics2DPlugin.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * Physics2DPlugin 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _getUnit,\n    _getStyleSaver,\n    _reverting,\n    _DEG2RAD = Math.PI / 180,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _bonusValidated = 1,\n    //<name>Physics2DPlugin</name>\n_initCore = function _initCore(core) {\n  gsap = core || _getGSAP();\n\n  if (!_coreInitted) {\n    _getUnit = gsap.utils.getUnit;\n    _getStyleSaver = gsap.core.getStyleSaver;\n\n    _reverting = gsap.core.reverting || function () {};\n\n    _coreInitted = 1;\n  }\n};\n\nvar PhysicsProp = function PhysicsProp(target, p, velocity, acceleration, stepsPerTimeUnit) {\n  var cache = target._gsap,\n      curVal = cache.get(target, p);\n  this.p = p;\n  this.set = cache.set(target, p); //setter\n\n  this.s = this.val = parseFloat(curVal);\n  this.u = _getUnit(curVal) || 0;\n  this.vel = velocity || 0;\n  this.v = this.vel / stepsPerTimeUnit;\n\n  if (acceleration || acceleration === 0) {\n    this.acc = acceleration;\n    this.a = this.acc / (stepsPerTimeUnit * stepsPerTimeUnit);\n  } else {\n    this.acc = this.a = 0;\n  }\n};\n\nexport var Physics2DPlugin = {\n  version: \"3.13.0\",\n  name: \"physics2D\",\n  register: _initCore,\n  init: function init(target, value, tween) {\n    _coreInitted || _initCore();\n    var data = this,\n        angle = +value.angle || 0,\n        velocity = +value.velocity || 0,\n        acceleration = +value.acceleration || 0,\n        xProp = value.xProp || \"x\",\n        yProp = value.yProp || \"y\",\n        aAngle = value.accelerationAngle || value.accelerationAngle === 0 ? +value.accelerationAngle : angle;\n    data.styles = _getStyleSaver && _getStyleSaver(target, value.xProp && value.xProp !== \"x\" ? value.xProp + \",\" + value.yProp : \"transform\");\n    data.target = target;\n    data.tween = tween;\n    data.step = 0;\n    data.sps = 30; //steps per second\n\n    if (value.gravity) {\n      acceleration = +value.gravity;\n      aAngle = 90;\n    }\n\n    angle *= _DEG2RAD;\n    aAngle *= _DEG2RAD;\n    data.fr = 1 - (+value.friction || 0);\n\n    data._props.push(xProp, yProp);\n\n    data.xp = new PhysicsProp(target, xProp, Math.cos(angle) * velocity, Math.cos(aAngle) * acceleration, data.sps);\n    data.yp = new PhysicsProp(target, yProp, Math.sin(angle) * velocity, Math.sin(aAngle) * acceleration, data.sps);\n    data.skipX = data.skipY = 0;\n  },\n  render: function render(ratio, data) {\n    var xp = data.xp,\n        yp = data.yp,\n        tween = data.tween,\n        target = data.target,\n        step = data.step,\n        sps = data.sps,\n        fr = data.fr,\n        skipX = data.skipX,\n        skipY = data.skipY,\n        time = tween._from ? tween._dur - tween._time : tween._time,\n        x,\n        y,\n        tt,\n        steps,\n        remainder,\n        i;\n\n    if (tween._time || !_reverting()) {\n      if (fr === 1) {\n        tt = time * time * 0.5;\n        x = xp.s + xp.vel * time + xp.acc * tt;\n        y = yp.s + yp.vel * time + yp.acc * tt;\n      } else {\n        time *= sps;\n        steps = i = (time | 0) - step;\n        /*\n        Note: rounding errors build up if we walk the calculations backward which we used to do like this to maximize performance:\n        \ti = -i;\n        \twhile (i--) {\n        \t\txp.val -= xp.v;\n        \t\typ.val -= yp.v;\n        \t\txp.v /= fr;\n        \t\typ.v /= fr;\n        \t\txp.v -= xp.a;\n        \t\typ.v -= yp.a;\n        \t}\n        but now for the sake of accuracy (to ensure rewinding always goes back to EXACTLY the same spot), we force the calculations to go forward every time. So if the tween is going backward, we just start from the beginning and iterate. This is only necessary with friction.\n         */\n\n        if (i < 0) {\n          xp.v = xp.vel / sps;\n          yp.v = yp.vel / sps;\n          xp.val = xp.s;\n          yp.val = yp.s;\n          data.step = 0;\n          steps = i = time | 0;\n        }\n\n        remainder = time % 1 * fr;\n\n        while (i--) {\n          xp.v += xp.a;\n          yp.v += yp.a;\n          xp.v *= fr;\n          yp.v *= fr;\n          xp.val += xp.v;\n          yp.val += yp.v;\n        }\n\n        x = xp.val + xp.v * remainder;\n        y = yp.val + yp.v * remainder;\n        data.step += steps;\n      }\n\n      skipX || xp.set(target, xp.p, _round(x) + xp.u);\n      skipY || yp.set(target, yp.p, _round(y) + yp.u);\n    } else {\n      data.styles.revert();\n    }\n  },\n  kill: function kill(property) {\n    if (this.xp.p === property) {\n      this.skipX = 1;\n    }\n\n    if (this.yp.p === property) {\n      this.skipY = 1;\n    }\n  }\n};\n_getGSAP() && gsap.registerPlugin(Physics2DPlugin);\nexport { Physics2DPlugin as default };",
      "start": 1746887673528,
      "end": 1746887673842,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746887673842,
      "end": 1746887673842,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746887673842,
      "end": 1746887673843,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746887673843,
      "end": 1746887673843,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746887673843,
      "end": 1746887673844,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746887673844,
      "end": 1746887673844,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746887673844,
      "end": 1746887673844,
      "order": "normal"
    }
  ]
}
