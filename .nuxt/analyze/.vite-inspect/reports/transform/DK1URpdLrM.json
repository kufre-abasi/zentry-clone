{
  "resolvedId": "/Users/kufre-abasibassey/Documents/Projects/WEB2/zentry clone/untitled folder/zentry/node_modules/gsap/EaselPlugin.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * EaselPlugin 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _win,\n    _createJS,\n    _ColorFilter,\n    _ColorMatrixFilter,\n    _colorProps = \"redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier,redOffset,greenOffset,blueOffset,alphaOffset\".split(\",\"),\n    _windowExists = function _windowExists() {\n  return typeof window !== \"undefined\";\n},\n    _getGSAP = function _getGSAP() {\n  return gsap || _windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _getCreateJS = function _getCreateJS() {\n  return _createJS || _win && _win.createjs || _win || {};\n},\n    _warn = function _warn(message) {\n  return console.warn(message);\n},\n    _cache = function _cache(target) {\n  var b = target.getBounds && target.getBounds();\n\n  if (!b) {\n    b = target.nominalBounds || {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 100\n    };\n    target.setBounds && target.setBounds(b.x, b.y, b.width, b.height);\n  }\n\n  target.cache && target.cache(b.x, b.y, b.width, b.height);\n\n  _warn(\"EaselPlugin: for filters to display in EaselJS, you must call the object's cache() method first. GSAP attempted to use the target's getBounds() for the cache but that may not be completely accurate. \" + target);\n},\n    _parseColorFilter = function _parseColorFilter(target, v, plugin) {\n  if (!_ColorFilter) {\n    _ColorFilter = _getCreateJS().ColorFilter;\n\n    if (!_ColorFilter) {\n      _warn(\"EaselPlugin error: The EaselJS ColorFilter JavaScript file wasn't loaded.\");\n    }\n  }\n\n  var filters = target.filters || [],\n      i = filters.length,\n      c,\n      s,\n      e,\n      a,\n      p,\n      pt;\n\n  while (i--) {\n    if (filters[i] instanceof _ColorFilter) {\n      s = filters[i];\n      break;\n    }\n  }\n\n  if (!s) {\n    s = new _ColorFilter();\n    filters.push(s);\n    target.filters = filters;\n  }\n\n  e = s.clone();\n\n  if (v.tint != null) {\n    c = gsap.utils.splitColor(v.tint);\n    a = v.tintAmount != null ? +v.tintAmount : 1;\n    e.redOffset = +c[0] * a;\n    e.greenOffset = +c[1] * a;\n    e.blueOffset = +c[2] * a;\n    e.redMultiplier = e.greenMultiplier = e.blueMultiplier = 1 - a;\n  } else {\n    for (p in v) {\n      if (p !== \"exposure\") if (p !== \"brightness\") {\n        e[p] = +v[p];\n      }\n    }\n  }\n\n  if (v.exposure != null) {\n    e.redOffset = e.greenOffset = e.blueOffset = 255 * (+v.exposure - 1);\n    e.redMultiplier = e.greenMultiplier = e.blueMultiplier = 1;\n  } else if (v.brightness != null) {\n    a = +v.brightness - 1;\n    e.redOffset = e.greenOffset = e.blueOffset = a > 0 ? a * 255 : 0;\n    e.redMultiplier = e.greenMultiplier = e.blueMultiplier = 1 - Math.abs(a);\n  }\n\n  i = 8;\n\n  while (i--) {\n    p = _colorProps[i];\n\n    if (s[p] !== e[p]) {\n      pt = plugin.add(s, p, s[p], e[p], 0, 0, 0, 0, 0, 1);\n\n      if (pt) {\n        pt.op = \"easel_colorFilter\";\n      }\n    }\n  }\n\n  plugin._props.push(\"easel_colorFilter\");\n\n  if (!target.cacheID) {\n    _cache(target);\n  }\n},\n    _idMatrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n    _lumR = 0.212671,\n    _lumG = 0.715160,\n    _lumB = 0.072169,\n    _applyMatrix = function _applyMatrix(m, m2) {\n  if (!(m instanceof Array) || !(m2 instanceof Array)) {\n    return m2;\n  }\n\n  var temp = [],\n      i = 0,\n      z = 0,\n      y,\n      x;\n\n  for (y = 0; y < 4; y++) {\n    for (x = 0; x < 5; x++) {\n      z = x === 4 ? m[i + 4] : 0;\n      temp[i + x] = m[i] * m2[x] + m[i + 1] * m2[x + 5] + m[i + 2] * m2[x + 10] + m[i + 3] * m2[x + 15] + z;\n    }\n\n    i += 5;\n  }\n\n  return temp;\n},\n    _setSaturation = function _setSaturation(m, n) {\n  if (isNaN(n)) {\n    return m;\n  }\n\n  var inv = 1 - n,\n      r = inv * _lumR,\n      g = inv * _lumG,\n      b = inv * _lumB;\n  return _applyMatrix([r + n, g, b, 0, 0, r, g + n, b, 0, 0, r, g, b + n, 0, 0, 0, 0, 0, 1, 0], m);\n},\n    _colorize = function _colorize(m, color, amount) {\n  if (isNaN(amount)) {\n    amount = 1;\n  }\n\n  var c = gsap.utils.splitColor(color),\n      r = c[0] / 255,\n      g = c[1] / 255,\n      b = c[2] / 255,\n      inv = 1 - amount;\n  return _applyMatrix([inv + amount * r * _lumR, amount * r * _lumG, amount * r * _lumB, 0, 0, amount * g * _lumR, inv + amount * g * _lumG, amount * g * _lumB, 0, 0, amount * b * _lumR, amount * b * _lumG, inv + amount * b * _lumB, 0, 0, 0, 0, 0, 1, 0], m);\n},\n    _setHue = function _setHue(m, n) {\n  if (isNaN(n)) {\n    return m;\n  }\n\n  n *= Math.PI / 180;\n  var c = Math.cos(n),\n      s = Math.sin(n);\n  return _applyMatrix([_lumR + c * (1 - _lumR) + s * -_lumR, _lumG + c * -_lumG + s * -_lumG, _lumB + c * -_lumB + s * (1 - _lumB), 0, 0, _lumR + c * -_lumR + s * 0.143, _lumG + c * (1 - _lumG) + s * 0.14, _lumB + c * -_lumB + s * -0.283, 0, 0, _lumR + c * -_lumR + s * -(1 - _lumR), _lumG + c * -_lumG + s * _lumG, _lumB + c * (1 - _lumB) + s * _lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], m);\n},\n    _setContrast = function _setContrast(m, n) {\n  if (isNaN(n)) {\n    return m;\n  }\n\n  n += 0.01;\n  return _applyMatrix([n, 0, 0, 0, 128 * (1 - n), 0, n, 0, 0, 128 * (1 - n), 0, 0, n, 0, 128 * (1 - n), 0, 0, 0, 1, 0], m);\n},\n    _parseColorMatrixFilter = function _parseColorMatrixFilter(target, v, plugin) {\n  if (!_ColorMatrixFilter) {\n    _ColorMatrixFilter = _getCreateJS().ColorMatrixFilter;\n\n    if (!_ColorMatrixFilter) {\n      _warn(\"EaselPlugin: The EaselJS ColorMatrixFilter JavaScript file wasn't loaded.\");\n    }\n  }\n\n  var filters = target.filters || [],\n      i = filters.length,\n      matrix,\n      startMatrix,\n      s,\n      pg;\n\n  while (--i > -1) {\n    if (filters[i] instanceof _ColorMatrixFilter) {\n      s = filters[i];\n      break;\n    }\n  }\n\n  if (!s) {\n    s = new _ColorMatrixFilter(_idMatrix.slice());\n    filters.push(s);\n    target.filters = filters;\n  }\n\n  startMatrix = s.matrix;\n  matrix = _idMatrix.slice();\n\n  if (v.colorize != null) {\n    matrix = _colorize(matrix, v.colorize, Number(v.colorizeAmount));\n  }\n\n  if (v.contrast != null) {\n    matrix = _setContrast(matrix, Number(v.contrast));\n  }\n\n  if (v.hue != null) {\n    matrix = _setHue(matrix, Number(v.hue));\n  }\n\n  if (v.saturation != null) {\n    matrix = _setSaturation(matrix, Number(v.saturation));\n  }\n\n  i = matrix.length;\n\n  while (--i > -1) {\n    if (matrix[i] !== startMatrix[i]) {\n      pg = plugin.add(startMatrix, i, startMatrix[i], matrix[i], 0, 0, 0, 0, 0, 1);\n\n      if (pg) {\n        pg.op = \"easel_colorMatrixFilter\";\n      }\n    }\n  }\n\n  plugin._props.push(\"easel_colorMatrixFilter\");\n\n  if (!target.cacheID) {\n    _cache();\n  }\n\n  plugin._matrix = startMatrix;\n},\n    _initCore = function _initCore(core) {\n  gsap = core || _getGSAP();\n\n  if (_windowExists()) {\n    _win = window;\n  }\n\n  if (gsap) {\n    _coreInitted = 1;\n  }\n};\n\nexport var EaselPlugin = {\n  version: \"3.13.0\",\n  name: \"easel\",\n  init: function init(target, value, tween, index, targets) {\n    if (!_coreInitted) {\n      _initCore();\n\n      if (!gsap) {\n        _warn(\"Please gsap.registerPlugin(EaselPlugin)\");\n      }\n    }\n\n    this.target = target;\n    var p, pt, tint, colorMatrix, end, labels, i;\n\n    for (p in value) {\n      end = value[p];\n\n      if (p === \"colorFilter\" || p === \"tint\" || p === \"tintAmount\" || p === \"exposure\" || p === \"brightness\") {\n        if (!tint) {\n          _parseColorFilter(target, value.colorFilter || value, this);\n\n          tint = true;\n        }\n      } else if (p === \"saturation\" || p === \"contrast\" || p === \"hue\" || p === \"colorize\" || p === \"colorizeAmount\") {\n        if (!colorMatrix) {\n          _parseColorMatrixFilter(target, value.colorMatrixFilter || value, this);\n\n          colorMatrix = true;\n        }\n      } else if (p === \"frame\") {\n        if (typeof end === \"string\" && end.charAt(1) !== \"=\" && (labels = target.labels)) {\n          for (i = 0; i < labels.length; i++) {\n            if (labels[i].label === end) {\n              end = labels[i].position;\n            }\n          }\n        }\n\n        pt = this.add(target, \"gotoAndStop\", target.currentFrame, end, index, targets, Math.round, 0, 0, 1);\n\n        if (pt) {\n          pt.op = p;\n        }\n      } else if (target[p] != null) {\n        this.add(target, p, \"get\", end);\n      }\n    }\n  },\n  render: function render(ratio, data) {\n    var pt = data._pt;\n\n    while (pt) {\n      pt.r(ratio, pt.d);\n      pt = pt._next;\n    }\n\n    if (data.target.cacheID) {\n      data.target.updateCache();\n    }\n  },\n  register: _initCore\n};\n\nEaselPlugin.registerCreateJS = function (createjs) {\n  _createJS = createjs;\n};\n\n_getGSAP() && gsap.registerPlugin(EaselPlugin);\nexport { EaselPlugin as default };",
      "start": 1746887673507,
      "end": 1746887673781,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746887673781,
      "end": 1746887673781,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746887673781,
      "end": 1746887673782,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746887673782,
      "end": 1746887673784,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746887673784,
      "end": 1746887673784,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746887673784,
      "end": 1746887673784,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746887673784,
      "end": 1746887673784,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1746887673784,
      "end": 1746887673784,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1746887673784,
      "end": 1746887673784,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746887673784,
      "end": 1746887673784,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746887673784,
      "end": 1746887673785,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746887673785,
      "end": 1746887673785,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746887673785,
      "end": 1746887673785,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746887673785,
      "end": 1746887673785,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746887673785,
      "end": 1746887673785,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746887673785,
      "end": 1746887673785,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746887673785,
      "end": 1746887673785,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746887673785,
      "end": 1746887673785,
      "order": "normal"
    }
  ]
}
