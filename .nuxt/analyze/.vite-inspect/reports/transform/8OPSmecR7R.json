{
  "resolvedId": "/Users/kufre-abasibassey/Documents/Projects/WEB2/zentry clone/untitled folder/zentry/node_modules/gsap/TextPlugin.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * TextPlugin 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nimport { emojiSafeSplit, getText, splitInnerHTML } from \"./utils/strings.js\";\n\nvar gsap,\n    _tempDiv,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n};\n\nexport var TextPlugin = {\n  version: \"3.13.0\",\n  name: \"text\",\n  init: function init(target, value, tween) {\n    typeof value !== \"object\" && (value = {\n      value: value\n    });\n\n    var i = target.nodeName.toUpperCase(),\n        data = this,\n        _value = value,\n        newClass = _value.newClass,\n        oldClass = _value.oldClass,\n        preserveSpaces = _value.preserveSpaces,\n        rtl = _value.rtl,\n        delimiter = data.delimiter = value.delimiter || \"\",\n        fillChar = data.fillChar = value.fillChar || (value.padSpace ? \"&nbsp;\" : \"\"),\n        _short,\n        text,\n        original,\n        j,\n        condensedText,\n        condensedOriginal,\n        aggregate,\n        s;\n\n    data.svg = target.getBBox && (i === \"TEXT\" || i === \"TSPAN\");\n\n    if (!(\"innerHTML\" in target) && !data.svg) {\n      return false;\n    }\n\n    data.target = target;\n\n    if (!(\"value\" in value)) {\n      data.text = data.original = [\"\"];\n      return;\n    }\n\n    original = splitInnerHTML(target, delimiter, false, preserveSpaces, data.svg);\n    _tempDiv || (_tempDiv = document.createElement(\"div\"));\n    _tempDiv.innerHTML = value.value;\n    text = splitInnerHTML(_tempDiv, delimiter, false, preserveSpaces, data.svg);\n    data.from = tween._from;\n\n    if ((data.from || rtl) && !(rtl && data.from)) {\n      // right-to-left or \"from()\" tweens should invert things (but if it's BOTH .from() and rtl, inverting twice equals not inverting at all :)\n      i = original;\n      original = text;\n      text = i;\n    }\n\n    data.hasClass = !!(newClass || oldClass);\n    data.newClass = rtl ? oldClass : newClass;\n    data.oldClass = rtl ? newClass : oldClass;\n    i = original.length - text.length;\n    _short = i < 0 ? original : text;\n\n    if (i < 0) {\n      i = -i;\n    }\n\n    while (--i > -1) {\n      _short.push(fillChar);\n    }\n\n    if (value.type === \"diff\") {\n      j = 0;\n      condensedText = [];\n      condensedOriginal = [];\n      aggregate = \"\";\n\n      for (i = 0; i < text.length; i++) {\n        s = text[i];\n\n        if (s === original[i]) {\n          aggregate += s;\n        } else {\n          condensedText[j] = aggregate + s;\n          condensedOriginal[j++] = aggregate + original[i];\n          aggregate = \"\";\n        }\n      }\n\n      text = condensedText;\n      original = condensedOriginal;\n\n      if (aggregate) {\n        text.push(aggregate);\n        original.push(aggregate);\n      }\n    }\n\n    value.speed && tween.duration(Math.min(0.05 / value.speed * _short.length, value.maxDuration || 9999));\n    data.rtl = rtl;\n    data.original = original;\n    data.text = text;\n\n    data._props.push(\"text\");\n  },\n  render: function render(ratio, data) {\n    if (ratio > 1) {\n      ratio = 1;\n    } else if (ratio < 0) {\n      ratio = 0;\n    }\n\n    if (data.from) {\n      ratio = 1 - ratio;\n    }\n\n    var text = data.text,\n        hasClass = data.hasClass,\n        newClass = data.newClass,\n        oldClass = data.oldClass,\n        delimiter = data.delimiter,\n        target = data.target,\n        fillChar = data.fillChar,\n        original = data.original,\n        rtl = data.rtl,\n        l = text.length,\n        i = (rtl ? 1 - ratio : ratio) * l + 0.5 | 0,\n        applyNew,\n        applyOld,\n        str;\n\n    if (hasClass && ratio) {\n      applyNew = newClass && i;\n      applyOld = oldClass && i !== l;\n      str = (applyNew ? \"<span class='\" + newClass + \"'>\" : \"\") + text.slice(0, i).join(delimiter) + (applyNew ? \"</span>\" : \"\") + (applyOld ? \"<span class='\" + oldClass + \"'>\" : \"\") + delimiter + original.slice(i).join(delimiter) + (applyOld ? \"</span>\" : \"\");\n    } else {\n      str = text.slice(0, i).join(delimiter) + delimiter + original.slice(i).join(delimiter);\n    }\n\n    if (data.svg) {\n      //SVG text elements don't have an \"innerHTML\" in Microsoft browsers.\n      target.textContent = str;\n    } else {\n      target.innerHTML = fillChar === \"&nbsp;\" && ~str.indexOf(\"  \") ? str.split(\"  \").join(\"&nbsp;&nbsp;\") : str;\n    }\n  }\n};\nTextPlugin.splitInnerHTML = splitInnerHTML;\nTextPlugin.emojiSafeSplit = emojiSafeSplit;\nTextPlugin.getText = getText;\n_getGSAP() && gsap.registerPlugin(TextPlugin);\nexport { TextPlugin as default };",
      "start": 1746891115609,
      "end": 1746891116163,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746891116163,
      "end": 1746891116163,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746891116163,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746891116164,
      "end": 1746891116164,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746891116164,
      "end": 1746891116165,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746891116165,
      "end": 1746891116165,
      "order": "normal"
    }
  ]
}
