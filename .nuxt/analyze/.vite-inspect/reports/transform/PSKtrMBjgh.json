{
  "resolvedId": "/Users/kufre-abasibassey/Documents/Projects/WEB2/zentry clone/untitled folder/zentry/node_modules/gsap/CustomWiggle.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * CustomWiggle 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    createCustomEase,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _eases = {\n  easeOut: \"M0,1,C0.7,1,0.6,0,1,0\",\n  easeInOut: \"M0,0,C0.1,0,0.24,1,0.444,1,0.644,1,0.6,0,1,0\",\n  anticipate: \"M0,0,C0,0.222,0.024,0.386,0,0.4,0.18,0.455,0.65,0.646,0.7,0.67,0.9,0.76,1,0.846,1,1\",\n  uniform: \"M0,0,C0,0.95,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0\"\n},\n    _linearEase = function _linearEase(p) {\n  return p;\n},\n    _initCore = function _initCore(required) {\n  if (!_coreInitted) {\n    gsap = _getGSAP();\n    createCustomEase = gsap && gsap.parseEase(\"_CE\");\n\n    if (createCustomEase) {\n      for (var p in _eases) {\n        _eases[p] = createCustomEase(\"\", _eases[p]);\n      }\n\n      _coreInitted = 1;\n\n      _create(\"wiggle\").config = function (vars) {\n        return typeof vars === \"object\" ? _create(\"\", vars) : _create(\"wiggle(\" + vars + \")\", {\n          wiggles: +vars\n        });\n      };\n    } else {\n      required && console.warn(\"Please gsap.registerPlugin(CustomEase, CustomWiggle)\");\n    }\n  }\n},\n    _parseEase = function _parseEase(ease, invertNonCustomEases) {\n  if (typeof ease !== \"function\") {\n    ease = gsap.parseEase(ease) || createCustomEase(\"\", ease);\n  }\n\n  return ease.custom || !invertNonCustomEases ? ease : function (p) {\n    return 1 - ease(p);\n  };\n},\n    _bonusValidated = 1,\n    //<name>CustomWiggle</name>\n_create = function _create(id, vars) {\n  if (!_coreInitted) {\n    _initCore(1);\n  }\n\n  vars = vars || {};\n  var wiggles = (vars.wiggles || 10) | 0,\n      inc = 1 / wiggles,\n      x = inc / 2,\n      anticipate = vars.type === \"anticipate\",\n      yEase = _eases[vars.type] || _eases.easeOut,\n      xEase = _linearEase,\n      rnd = 1000,\n      nextX,\n      nextY,\n      angle,\n      handleX,\n      handleY,\n      easedX,\n      y,\n      path,\n      i;\n\n  if (_bonusValidated) {\n    if (anticipate) {\n      //the anticipate ease is actually applied on the x-axis (timing) and uses easeOut for amplitude.\n      xEase = yEase;\n      yEase = _eases.easeOut;\n    }\n\n    if (vars.timingEase) {\n      xEase = _parseEase(vars.timingEase);\n    }\n\n    if (vars.amplitudeEase) {\n      yEase = _parseEase(vars.amplitudeEase, true);\n    }\n\n    easedX = xEase(x);\n    y = anticipate ? -yEase(x) : yEase(x);\n    path = [0, 0, easedX / 4, 0, easedX / 2, y, easedX, y];\n\n    if (vars.type === \"random\") {\n      //if we just select random values on the y-axis and plug them into the \"normal\" algorithm, since the control points are always straight horizontal, it creates a bit of a slowdown at each anchor which just didn't seem as desirable, so we switched to an algorithm that bends the control points to be more in line with their context.\n      path.length = 4;\n      nextX = xEase(inc);\n      nextY = Math.random() * 2 - 1;\n\n      for (i = 2; i < wiggles; i++) {\n        x = nextX;\n        y = nextY;\n        nextX = xEase(inc * i);\n        nextY = Math.random() * 2 - 1;\n        angle = Math.atan2(nextY - path[path.length - 3], nextX - path[path.length - 4]);\n        handleX = Math.cos(angle) * inc;\n        handleY = Math.sin(angle) * inc;\n        path.push(x - handleX, y - handleY, x, y, x + handleX, y + handleY);\n      }\n\n      path.push(nextX, 0, 1, 0);\n    } else {\n      for (i = 1; i < wiggles; i++) {\n        path.push(xEase(x + inc / 2), y);\n        x += inc;\n        y = (y > 0 ? -1 : 1) * yEase(i * inc);\n        easedX = xEase(x);\n        path.push(xEase(x - inc / 2), y, easedX, y);\n      }\n\n      path.push(xEase(x + inc / 4), y, xEase(x + inc / 4), 0, 1, 0);\n    }\n\n    i = path.length;\n\n    while (--i > -1) {\n      path[i] = ~~(path[i] * rnd) / rnd; //round values to avoid odd strings for super tiny values\n    }\n\n    path[2] = \"C\" + path[2];\n    return createCustomEase(id, \"M\" + path.join(\",\"));\n  }\n};\n\nexport var CustomWiggle = /*#__PURE__*/function () {\n  function CustomWiggle(id, vars) {\n    this.ease = _create(id, vars);\n  }\n\n  CustomWiggle.create = function create(id, vars) {\n    return _create(id, vars);\n  };\n\n  CustomWiggle.register = function register(core) {\n    gsap = core;\n\n    _initCore();\n  };\n\n  return CustomWiggle;\n}();\n_getGSAP() && gsap.registerPlugin(CustomWiggle);\nCustomWiggle.version = \"3.13.0\";\nexport { CustomWiggle as default };",
      "start": 1746887672436,
      "end": 1746887673613,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746887673613,
      "end": 1746887673613,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746887673613,
      "end": 1746887673613,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1746887673613,
      "end": 1746887673613,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746887673614,
      "end": 1746887673614,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746887673614,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746887673615,
      "end": 1746887673615,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746887673615,
      "end": 1746887673616,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746887673616,
      "end": 1746887673616,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746887673616,
      "end": 1746887673616,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746887673616,
      "end": 1746887673616,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1746887673616,
      "end": 1746887673616,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1746887673616,
      "end": 1746887673616,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1746887673616,
      "end": 1746887673616,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1746887673616,
      "end": 1746887673617,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746887673617,
      "end": 1746887673617,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746887673617,
      "end": 1746887673617,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746887673617,
      "end": 1746887673617,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746887673617,
      "end": 1746887673617,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746887673617,
      "end": 1746887673617,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746887673617,
      "end": 1746887673617,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746887673617,
      "end": 1746887673617,
      "order": "normal"
    }
  ]
}
